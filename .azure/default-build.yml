parameters:
  agentOs: 'Windows'
  poolVmImage: ''
  beforeBuild: []
  afterBuild: []
  timeoutInMinutes: 60
  cMakeRunArgs: ''
  configuration: 'Release'

jobs:
- job: ${{ coalesce(parameters.jobName, parameters.agentOs) }}
  displayName: ${{ coalesce(parameters.jobDisplayName, parameters.agentOs) }}
  timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
  pool:
    ${{ if ne(parameters.poolVmImage, '') }}:
      vmImage: ${{ parameters.poolVmImage }}
    ${{ if and(eq(parameters.poolVmImage, ''), eq(parameters.agentOs, 'macOS')) }}:
      vmImage: macOS-10.13
    ${{ if and(eq(parameters.poolVmImage, ''), eq(parameters.agentOs, 'Linux')) }}:
      vmImage: ubuntu-16.04
  steps:
  - checkout: self
    clean: true
  
  - ${{ parameters.beforeBuild }}
  
  - task: CMake@1
    inputs:
      cmakeArgs: .. ${{ parameters.cMakeRunArgs }} -DCMAKE_TOOLCHAIN_FILE=../submodules/vcpkg/scripts/buildsystems/vcpkg.cmake -DENABLE_TESTING=1 -DCMAKE_BUILD_TYPE=${{ parameters.configuration }}
      workingDirectory: 'build.${{ parameters.configuration }}'
    displayName: Create build files
  - task: CMake@1
    inputs:
      cmakeArgs: --build . --config ${{ parameters.configuration }}
      workingDirectory: 'build.${{ parameters.configuration }}'
    displayName: Build client
    ${{ if eq(parameters.agentOs, 'macOS') }}:
      - bash: "./build.${{ parameters.configuration }}/bin/signalrclienttests"
        condition: eq( variables['Agent.OS'], 'Darwin' )
        displayName: Run tests
    ${{ if eq(parameters.agentOs, 'Linux') }}:
      - bash: "./build.${{ parameters.configuration }}/bin/signalrclienttests"
        condition: eq( variables['Agent.OS'], 'Linux' )
        displayName: Run tests
        continueOnError: true
        timeoutInMinutes: 2
    ${{ if eq(parameters.agentOs, 'Windows') }}:
      - powershell: "& ./build.${{ parameters.configuration }}/bin/${{ parameters.configuration }}/signalrclienttests.exe"
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: Run tests

  - ${{ parameters.afterBuild }}