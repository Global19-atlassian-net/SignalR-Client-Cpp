parameters:
  agentOs: 'Windows'
  poolVmImage: ''
  beforeBuild: []
  afterBuild: []
  timeoutInMinutes: 60

jobs:
- job: ${{ coalesce(parameters.jobName, parameters.agentOs) }}
  displayName: ${{ coalesce(parameters.jobDisplayName, parameters.agentOs) }}
  timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
  pool:
    ${{ if ne(parameters.poolVmImage, '') }}:
      vmImage: ${{ parameters.poolVmImage }}
    ${{ if and(eq(parameters.poolVmImage, ''), eq(parameters.agentOs, 'macOS')) }}:
      vmImage: macOS-10.13
    ${{ if and(eq(parameters.poolVmImage, ''), eq(parameters.agentOs, 'Linux')) }}:
      vmImage: ubuntu-16.04
  steps:
  - checkout: self
    clean: true
  
  - ${{ parameters.beforeBuild }}
  
  - task: CMake@1
    inputs:
      cmakeArgs: .. -DCMAKE_TOOLCHAIN_FILE=../submodules/vcpkg/scripts/buildsystems/vcpkg.cmake -DENABLE_TESTING=1
    displayName: Create build files
  - task: CMake@1
    inputs:
      cmakeArgs: --build .
    displayName: Build client
  - script: |
      cd build/bin
      ./signalrclienttests.exe
    displayName: Run tests

  - ${{ parameters.afterBuild }}